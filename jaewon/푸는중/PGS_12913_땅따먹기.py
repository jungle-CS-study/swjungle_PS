def solution(land):
    n = len(land)
    dp = [[0] * 4 for _ in range(n)]
    
    for i in range(4):
        dp[0][i] = land[0][i]
    
    for i in range(1, n):
        for j in range(4):
            dp[i][j] = max(dp[i-1][:j] + dp[i-1][j+1:]) + land[i][j]

    # 두 번째 행(dp[1])부터 시작하여 dp 리스트의 각 위치에 도달했을 때의 최대 점수를 계산합니다.
    # dp[i][j]는 dp[i-1][:j] + dp[i-1][j+1:]의 최댓값에 land[i][j]를 더한 값입니다.
    # dp[i-1][:j]는 이전 행(dp[i-1])에서 j 인덱스 이전까지의 요소들을 선택한 리스트를 의미합니다.
    # dp[i-1][j+1:]는 이전 행(dp[i-1])에서 j+1 인덱스부터 끝까지의 요소들을 선택한 리스트를 의미합니다.
    # 따라서, dp[i-1][:j] + dp[i-1][j+1:]는 이전 행에서 j 인덱스를 제외한 요소들을 합한 리스트입니다.
    # max(dp[i-1][:j] + dp[i-1][j+1:])는 이전 행에서 j 인덱스를 제외한 요소들 중 최댓값을 의미합니다.
    # 최종적으로 dp[i][j]는 이전 행에서 j 인덱스를 제외한 요소들 중 최댓값에 현재 위치의 값인 land[i][j]를 더한 값이 됩니다.

    # 예를 들면 dp[0]는 [1, 2, 3, 4, 5]입니다.
    # dp[0][:1]은 [1]이고, dp[0][2:]는 [3, 4, 5]입니다.
    # 따라서 dp[0][:1] + dp[0][2:]는 [1] + [3, 4, 5]가 되어 [1, 3, 4, 5]가 됩니다.
    
    return max(dp[n-1])

land = [[10,20,30,50],[50,60,70,80],[40,30,20,10]]
print(solution(land))
